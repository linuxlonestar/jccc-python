This book assumes that you know close to nothing about Machine Learning. Its goal
is to give you the concepts, the intuitions, and the tools you need to actually imple
ment programs capable of learning from data.
We will cover a large number of techniques, from the simplest and most commonly
used (such as linear regression) to some of the Deep Learning techniques that regu
larly win competitions.
Rather than implementing our own toy versions of each algorithm, we will be using
actual production-ready Python frameworks:
Scikit-Learn is very easy to use, yet it implements many Machine Learning algo
rithms efficiently, so it makes for a great entry point to learn Machine Learning.
TensorFlow is a more complex library for distributed numerical computation. It
makes it possible to train and run very large neural networks efficiently by dis
tributing the computations across potentially hundreds of multi-GPU servers.
TensorFlow was created at Google and supports many of their large-scale
Machine Learning applications. It was open sourced in November 2015.
Keras is a high level Deep Learning API that makes it very simple to train and
run neural networks. It can run on top of either TensorFlow, Theano or Micro
soft Cognitive Toolkit (formerly known as CNTK). TensorFlow comes with its
own implementation of this API, called tf.keras, which provides support for some
advanced TensorFlow features (e.g., to efficiently load data).
The book favors a hands-on approach, growing an intuitive understanding of
Machine Learning through concrete working examples and just a little bit of theory.
While you can read this book without picking up your laptop, we highly recommend
xii | Preface
you experiment with the code examples available online as Jupyter notebooks at
https://github.com/ageron/handson-ml2.
Prerequisites
This book assumes that you have some Python programming experience and that you
are familiar with Python’s main scientific libraries, in particular NumPy, Pandas, and
Matplotlib.
Also, if you care about what’s under the hood you should have a reasonable under
standing of college-level math as well (calculus, linear algebra, probabilities, and sta
tistics).
If you don’t know Python yet, http://learnpython.org/ is a great place to start. The offi
cial tutorial on python.org is also quite good.
If you have never used Jupyter, Chapter 2 will guide you through installation and the
basics: it is a great tool to have in your toolbox.
If you are not familiar with Python’s scientific libraries, the provided Jupyter note
books include a few tutorials. There is also a quick math tutorial for linear algebra.
Roadmap
This book is organized in two parts. Part I, The Fundamentals of Machine Learning,
covers the following topics:
What is Machine Learning? What problems does it try to solve? What are the
main categories and fundamental concepts of Machine Learning systems?
The main steps in a typical Machine Learning project.
Learning by fitting a model to data.
Optimizing a cost function.
Handling, cleaning, and preparing data.
Selecting and engineering features.
Selecting a model and tuning hyperparameters using cross-validation.
The main challenges of Machine Learning, in particular underfitting and overfit
ting (the bias/variance tradeoff).
Reducing the dimensionality of the training data to fight the curse of dimension
ality.
Other unsupervised learning techniques, including clustering, density estimation
and anomaly detection.